Имея два отсортированных массива размера m и n соответственно, вам нужно найти элемент, который будет находиться на k-й 
позиции в конечном отсортированном массиве.
Массив 1 - 100 112 256 349 770
Массив 2 - 72 86 113 119 265 445 892
к = 7
Вывод : 256
Окончательный отсортированный массив -
72, 86, 100, 112, 113, 119, 256, 265, 349, 445, 770, 892
7-й элемент этого массива равен 256.


Алгоритм для нахождения элемента на k-й позиции в конечном отсортированном массиве из двух отсортированных массивов:

1. Инициализировать указатели для обоих массивов (i для первого массива, j для второго).
2. Создать переменную merged для хранения объединенного массива.
3. Пока не достигнута k-я позиция и не исчерпаны оба массива:
   - Если текущий элемент в первом массиве (arr1[i]) меньше или равен текущему элементу во втором массиве (arr2[j]), 
   добавить arr1[i] в merged и увеличить i.
   - В противном случае добавить arr2[j] в merged и увеличить j.
4. Если исчерпан первый массив (i достигло конца), добавить оставшиеся элементы из второго массива в merged.
5. Если исчерпан второй массив (j достигло конца), добавить оставшиеся элементы из первого массива в merged.
6. Вернуть merged[k-1] как результат.

Пример на Java:

public class KthElementInSortedArrays {
    public static void main(String[] args) {
        int[] arr1 = {100, 112, 256, 349, 770};
        int[] arr2 = {72, 86, 113, 119, 265, 445, 892};
        int k = 7;

        int result = findKthElement(arr1, arr2, k);
        System.out.println("Kth элемент: " + result);
    }

    public static int findKthElement(int[] arr1, int[] arr2, int k) {
        int i = 0, j = 0;
        int[] merged = new int[arr1.length + arr2.length];

        while (i < arr1.length && j < arr2.length && (i + j) < k) {
            if (arr1[i] <= arr2[j]) {
                merged[i + j] = arr1[i];
                i++;
            } else {
                merged[i + j] = arr2[j];
                j++;
            }
        }

        while (i < arr1.length && (i + j) < k) {
            merged[i + j] = arr1[i];
            i++;
        }

        while (j < arr2.length && (i + j) < k) {
            merged[i + j] = arr2[j];
            j++;
        }

        return merged[k - 1];
    }
}

В данном примере ожидается, что k не превышает общее количество элементов в объединенном массиве.